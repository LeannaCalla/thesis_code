function [ sun_movements, N] = char_times(set, start_time, end_time, total_time)
% char_times: returns information about characteristic times for a
% particular data set
% input: data set, total time of interest for the study
% output: sun_movements- vector which indicates the characteristic times (increasing
% hours from initial time of study)
%          N - records the lengths of the characteristic intervals

if set == 1 || set == 2 || set == 4
    sunrise = [ ...
        6+47/60 6+48/60 6+49/60 6+50/60 6+51/60 6+52/60 6+54/60 6+55/60 6+56/60 6+57/60 ...
        6+58/60 6+59/60 7+ 0/60 7+ 2/60 7+ 3/60 7+ 4/60 7+ 5/60 7+ 6/60 7+ 7/60 7+ 8/60 ...
        7+10/60 7+11/60 7+12/60 ...
        7+13/60 7+14/60 7+16/60 7+17/60 7+18/60 7+19/60 7+20/60 7+22/60 7+23/60 7+24/60 ...
        7+25/60 7+26/60 7+28/60 7+29/60 7+30/60 7+31/60 7+33/60 7+34/60 7+35/60 7+36/60 ...
        7+38/60 7+39/60 7+40/60 7+41/60 7+43/60 7+44/60 7+45/60 7+47/60 7+48/60 7+49/60 ...
        7+51/50 ...
        7+52/60 7+53/60 7+55/60];
    sunset = 12 + [ ...
        7+37/60 7+35/60 7+34/60 7+32/60 7+30/60 7+28/60 7+26/60 7+24/60 7+22/60 7+21/60 ...
        7+19/60 7+17/60 7+15/60 7+13/60 7+11/60 7+10/60 7+ 8/60 7+ 6/60 7+ 4/60 7+ 2/60 ...
        7+ 0/60 6+59/60 6+57/60 ...
        6+55/60 6+53/60 6+51/60 6+49/60 6+48/60 6+46/60 6+44/60 6+42/60 6+41/60 6+39/60 ...
        6+37/60 6+35/60 6+34/60 6+32/60 6+30/60 6+29/60 6+27/60 6+25/60 6+24/60 6+22/60 ...
        6+21/60 6+19/60 6+18/60 6+16/60 6+15/60 6+13/60 6+12/60 6+10/60 6+ 9/60 6+ 7/60 ...
        6+ 6/60 ...
        6+ 5/60 6+ 3/60 6+ 2/60];
    sunrise = sunrise + 24*(0:56);
    sunset  = sunset  + 24*(0:56);
    
    % create indexes to give important transition times
   
elseif set == 3
    % July 5 2016 -  begins at 11am
    sunrise = [ 5+39/60 5+40/60 5+40/60 5+41/60 5+42/60 5+43/60 5+43/60 5+44/60 ...
        5+45/60 5+46/60 5+47/60 5+48/60 5+49/60 5+50/60 5+51/60 5+51/60 5+52/60 5+53/60 ...
        5+54/60 5+55/60 5+56/60 5+57/60 5+59/60 6+0/60 6+01/60 6+02/60 6+03/60 6+04/60 ...
        6+05/60 6+06/60 6+07/60 6+08/60 6+09/60 6+11/60 6+12/60 6+13/60 6+14/60 6+15/60 ...
        6+16/60 6+17/60  6+18/60 6+20/60 6+21/60 6+22/60 6+23/60 ];
    
    sunset = 12 + [9+00/60 9+00/60 8+59/60 8+59/60 8+58/60 8+58/60 8+57/60 8+57/60 8+56/60 8+55/60 ...
        8+55/60 8+54/60 8+53/60 8+52/60 8+51/60 8+51/60 8+50/60 8+49/60 8+48/60 8+47/60 8+46/60 ...
        8+45/60 8+44/60 8+43/60 8+41/60 8+40/60 8+39/60 8+38/60 8+37/60 8+35/60 8+34/60 8+33/60 ...
        8+31/60  8+30/60  8+29/60 8+27/60 8+26/60 8+24/60 8+23/60 8+21/60 8+20/60 8+18/60 8+17/60 ...
        8+15/60 8+14/60];
    sunrise = sunrise + 24*(0:44);
    sunset  = sunset  + 24*(0:44);
    
    
    
end
sun_movements = [sunrise, sunset];
sun_movements = sort(sun_movements);
sun_movements(sun_movements<0) = 0;
sun_movements = sun_movements(sun_movements<total_time);
%sun_movements = round(sun_movements);
sun_movements = [sun_movements, total_time];
for i = 1:length(sun_movements)-1
    N(i) = sun_movements(i+1) - sun_movements(i);
end
end

